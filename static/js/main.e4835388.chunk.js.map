{"version":3,"sources":["components/Card/Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","cardInfo","name","universe","alter","job","friends","powers","pic","className","src","alt","heroes","likes","App","map","elem","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAEO,SAASA,EAAKC,GACjB,MAAwEA,EAAjEC,SAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,IAAKC,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,OAAQC,EAA/D,EAA+DA,IAE/D,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAG,UAAKT,EAAL,6BAAkBO,UAAU,QAC9C,sBAAKA,UAAU,OAAf,UACI,sDAAUP,KACV,yFAAeC,KACf,0FAAgBC,KAChB,8HAAsBC,KACtB,uEAAYC,KACZ,wFAAcC,WCV9B,IAAIK,EAAS,CACX,CACIV,KAAK,uCACLC,SAAS,YACTC,MAAM,oDACNC,IAAI,6OACJC,QAAQ,6EACRC,OAAO,0UACPM,MAAO,KACPL,IAAI,oBAGR,CACIN,KAAK,mDACLC,SAAS,YACTC,MAAM,0DACNC,IAAI,mIACJC,QAAS,4EACTC,OAAO,8dACPM,MAAO,KACPL,IAAI,uBAGR,CACIN,KAAK,8FACLC,SAAS,gBACTC,MAAM,0DACNC,IAAI,mMACJC,QAAQ,mDACRC,OAAO,ogBACPM,MAAO,KACPL,IAAI,sBAGR,CACIN,KAAK,sEACLC,SAAS,gBACTC,MAAM,sEACNC,IAAI,iOACJC,QAAQ,uOACRC,OAAO,kiBACPM,MAAO,KACPL,IAAI,wBAGR,CACIN,KAAK,wFACLC,SAAS,gBACTC,MAAM,kFACNC,IAAI,sEACJC,QAAQ,mDACRC,OAAO,uaACPM,MAAO,KACPL,IAAI,sBAGR,CACIN,KAAK,qBACLC,SAAS,gBACTC,MAAM,gEACNC,IAAI,sOACJC,QAAQ,mDACRC,OAAO,+LACPM,MAAO,KACPL,IAAI,kBAGR,CACIN,KAAK,sEACLC,SAAS,YACTC,MAAO,gEACPC,IAAI,oLACJC,QAAQ,mDACRC,OAAO,mSACPM,MAAO,KACPL,IAAI,qBAGR,CACIN,KAAK,sEACLC,SAAS,eACTC,MAAM,wFACNC,IAAI,uHACJC,QAAQ,mDACRC,OAAO,ycACPM,MAAO,KACPL,IAAI,oBAGR,CACIN,KAAK,uCACLC,SAAS,gBACTC,MAAM,2GACNC,IAAI,qGACJC,QAAQ,2NACRC,OAAO,ocACPM,MAAO,KACPL,IAAI,wBAmBKM,MAdf,WACE,OACE,qBAAKL,UAAU,MAAf,SAEIG,EAAOG,KAAK,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAAMhB,SAAUe,GAAWC,SCpGxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e4835388.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nexport function Card(props) {\r\n    const {cardInfo: {name, universe, alter, job, friends, powers, pic} } = props;\r\n\r\n    return(\r\n        <div className=\"card-item\">\r\n            <img src={pic} alt={`${name}-фото`} className=\"pic\" />\r\n            <div className=\"info\">\r\n                <h3>Имя: {name}</h3>\r\n                <p>Вселенная: {universe}</p>\r\n                <p>Альтер-эго: {alter}</p>\r\n                <p>Род деятельности: {job}</p>\r\n                <p>Друзья: {friends}</p>\r\n                <p>Суперсилы:{powers}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport { Card } from \"./components/Card\";\n\n\nlet heroes = [\n  {\n      name: `Бэтмен`,\n      universe: `DC Comics`,\n      alter: `Брюс Уэйн`,\n      job: `борец с преступностью, филантроп, миллиардер`,\n      friends: `Робин, Бэтгерл`,\n      powers: `интеллект, обширные познания, знания боевых искусств, ловкость`,\n      likes: \"no\",\n      pic: `/pics/batman.jpg`\n},\n\n  {\n      name: `Супермен`,\n      universe: `DC Comics`,\n      alter: `Кларк Кент`,\n      job: `борец за справедливость`,\n      friends: \"собака Крипто\",\n      powers: `непробиваемость, суперсила, полет, самоисцеление, суперзрение и суперслух, классный костюм`,\n      likes: \"no\",\n      pic: `./pics/superman.jpg`\n  },\n\n  {\n      name: `Железный человек`,\n      universe: `Marvel Comics`,\n      alter: `Тони Старк`,\n      job: `гений, миллиардер, плейбой, филантроп`,\n      friends: `мстители`,\n      powers: `высокий уровень интеллекта, широкие познания науки и техники, связь со всемирной паутиной, костюмы`,\n      likes: \"no\",\n      pic: `./pics/ironman.jpg`\n  },\n\n  {\n      name: `Человек-паук`,\n      universe: `Marvel Comics`,\n      alter: `Питер Паркер`,\n      job: `борец за справедливость, студент, фотограф`,\n      friends: `Мстители, Фантастическая четверка, Люди Икс`,\n      powers: `высокий уровень интеллекта, широкие познания науки и техники, связь со всемирной паутиной, бронекостюмы`,\n      likes: \"no\",\n      pic: `./pics/spiderman.jpg`\n  },\n\n  {\n      name: `Капитан Америка`,\n      universe: `Marvel Comics`,\n      alter: `Стивен Роджерс`,\n      job: `супер-солдат`,\n      friends: `Мстители`,\n      powers: `сила, выносливость, бессмертие, быстрая регенерация, мастерство скрытности и боя`,\n      likes: \"no\",\n      pic: `./pics/captain.jpg`\n  },\n\n  {\n      name: `Тор`,\n      universe: `Marvel Comics`,\n      alter: `Тор Одинсон`,\n      job: `борец за справедливость, скандинавский бог`,\n      friends: `Мстители`,\n      powers: `все, что может бог, плюс молот Мьелнир`,\n      likes: \"no\",\n      pic: `./pics/tor.jpg`\n  },\n\n  {\n      name: `Чудо-женщина`,\n      universe: `DC Comics`,\n      alter: \"Диана Принс\",\n      job: `супергероиня, секретарь-референт`,\n      friends: `Мстители`,\n      powers: `сверхчеловеческая сила искорость, выносливость, полет`,\n      likes: \"no\",\n      pic: `./pics/wonder.jpg`\n  },\n\n  {\n      name: `Черная вдова`,\n      universe: `arvel Comics`,\n      alter: `Наташа Романофф`,\n      job: `супергероиня, шпионка`,\n      friends: `Мстители`,\n      powers: `пик человеческого физического потенциала, замедленное старение, знание многих языков`,\n      likes: \"no\",\n      pic: `./pics/widow.jpg`\n  },\n\n  {\n      name: `Дэдпул`,\n      universe: `Marvel Comics`,\n      alter: `Уэйд Уинстон Уилсон`,\n      job: `антигерой, наемник`,\n      friends: `частично Мстители, Человек-паук, Росомаха`,\n      powers: ` высокий болевой порог, регенерация и бессмертие, сверхчеловеческая иммунная система`,\n      likes: \"no\",\n      pic: `./pics/deadpool.jpg`\n  }\n\n]\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {\n        heroes.map( (elem, index) => {\n          return(\n            <Card cardInfo={elem} key={index}/>\n          )\n        } )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}